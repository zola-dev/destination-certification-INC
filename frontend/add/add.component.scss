@import '../global/check-xmark.scss';
$muted: #919191;
$app-main-blue: #28529f;
$white: #ffffff;
$light: #e7eff7;
$red:#ff0000;
//Font Awesome{
//fa-regular:
#addToDo{
  transform: translate(0,-16vh);
  transition: .3s;
  position:relative;
  height: 0;
  z-index: 1020;
}
.fa-circle-xmark,.fa-circle-check{
    font-size: 1vw;
    line-height: 2vw;
    z-index: 2;
    user-select: none;
    position: absolute;
    height: 4vh;
    margin-left: -2vw;
}
form{
    width: 14vw;
    top: 3vh;
    position: relative;
    >button
    {
    width: 14vw;
    height: 4vh;
    cursor: pointer;
    user-select: none;
    border-radius: 0.4vw;
    background: $muted;
    border: none;
    outline: none;
    font-weight: bold;
    font-size: .9vw;
    color: $white;
    position: relative;
    margin: 1vw auto;
    opacity: .9;
    transition: 0.3s ease-out;
    &:hover {
      opacity: 1;
    }
    &:not(:disabled){
    background: $app-main-blue;
    }
    &:not(:disabled),&:disabled{  
      &:hover{
        font-size: 0vw;
        color: transparent;
        transition: 0s ease-out;  
      }
      &:hover::before{
        color: $white;
        font-size: .9vw;
        vertical-align: middle;
      }
    }
    &:disabled:hover{
      background: $danger;
    }
    &:not(:disabled)::before,&:disabled:before{
      content: "";
      color: transparent;
      transition: 0s ease-out;
      }
    }
    button:not(:disabled):hover::before{
        opacity: 1;
    } 
    button:disabled:hover.emptyToDo:hover::before{
        content: "Empty ToDO not allowed";
    }
    button:disabled:hover.toDo2Long:hover::before{
        content: "ToDo is too Long"; 
    }
    button:not(:disabled):hover.completed:hover::before{
        content: "Store completed ToDO"; 
    }
    button:not(:disabled):hover.uncompleted:hover::before{
        content: "Store uncompleted ToDO"; 
    }
}
input{
    width: 14vw;
    height: 4vh;
    border-radius: .4vw;
    border: none;
    outline: none;
    background-color: $light;
}
input.ng-valid {
    color:$app-main-blue;
    caret-color:$app-main-blue;
}
input.ng-invalid {
    color:$danger;
    caret-color:$danger;
}
  .labelUp {
    padding-left: 6vw;
    font-size: .8vw!important;
  }
input:focus + .required-label,.required-label 
{
  position: relative;
  transition: 0.3s ease-out;
  transform: translateY(-1.5vw);
  font-size: 1vw;
  margin-left: -14vw;
  width: 14vw;
  &.required-label:after {
    content: '*';
    display: inline-block;
    margin-left: 0.25rem;
    color: $red;
  }
}
.label {
    color: $muted;
    transition: 0.3s!important;
    position: relative;
    transform: translateY(-.1vw);
    font-size: 1vw;   
    z-index: 1;
}
label[for="name"] {
    user-select: none;
    text-align: center;
}
.w-100{
  height: 16vh;
}

